---
title: "explore"
format: html

---

```{r, warning=FALSE, message=FALSE, include=FALSE}

library(tidyverse)
library(highcharter)
library(sjlabelled)

source("functionsg.R")


snap_df <- as.data.frame(
  read_csv("data/snap_1989_2024_monthly_2024_9.csv")
)




## make a data dictionary from text file. 
dict = read.table("data/dictionary.txt", sep = "-") 

dict <- dict %>% 
  t() %>%
  as_tibble() %>% 
  mutate(V1 = separate_wider_delim(., cols = V1,
                                   delim = ":", 
                                   names = c("value", "label")
                                   )) %>% 
  unnest() %>% 
  as_tibble()

  




snap_df <- set_label(snap_df, 
                     dict$label)



```

```{r}

Hmisc::describe(snap_df)

## avg benefits per person/household are sometimes negative
## percentage change in benefits receivers could be as high as -99.x %???
## strange data with percentage or absolute changes in persons/households that receive benefits



## There are some anomalies in the data. For instance the number of households that receive SNAP benefits in AL in 2019 changes from 346,977 in Jan to 1,663 in Feb and  back up to 342,619 in March 

## can drop by -100 to -300% and sometimes can increase by 1000s of % points in the space of a month. 

summary(snap_df$pchg_snaphh_1mo)

Hmisc::describe(snap_df$pchg_snaphh_1mo)


## a data set of just where we see massive anomalies. 
## It looks like there could be genuine increases of 20% or more month over month. 

weird_months <- snap_df %>% 
  filter(abs(pchg_snaphh_1mo) >= 40) %>% 
  select(state_abbrev, year, monthno)


snap_df_anom <- snap_df %>% 
  filter(paste0(state_abbrev, year, monthno) %in% ## include the weird month, preceding and following months. 
           paste0(weird_months$state_abbrev, 
                  weird_months$year, 
                  weird_months$monthno) |
          paste0(state_abbrev, year, monthno) %in% 
           paste0(weird_months$state_abbrev, 
                  weird_months$year, 
                  weird_months$monthno -1) |
           paste0(state_abbrev, year, monthno) %in% 
           paste0(weird_months$state_abbrev, 
                  weird_months$year, 
                  weird_months$monthno + 1) ) %>% 
  distinct() %>% 
  select(1:6, pchg_snaphh_1mo) %>% 
  mutate(pchg_snaphh_1mo = sprintf("%.2f",pchg_snaphh_1mo))


big_delta <- snap_df %>% ## identify row with big changes in either direction
    filter(abs(pchg_snaphh_1mo) > 40) %>% 
    select(state_abbrev, year, monthno, pchg_snaphh_1mo) %>% 
    mutate(type = if_else(pchg_snaphh_1mo >0, 'increase', 'dropoff'))
  
big_dropoff <- big_delta %>% 
    filter(type == 'dropoff')
  
big_increase <- big_delta %>% 
    filter(type == 'increase')
  
## flag as big drop off if the current month had a sudden 40% or larger decline and the next month had a 40% or larger rebound. 
flag_big_dropoff <- snap_df %>% 
    filter(pchg_snaphh_1mo < -40 &
             paste0(state_abbrev, year, monthno+1) %in%
              paste0(big_increase$state_abbrev, 
                     big_increase$year, 
                     big_increase$monthno))
  
flag_big_increase <- snap_df %>% 
  filter(pchg_snaphh_1mo > 40 &  ## this month is big increase.
           paste0(state_abbrev, year, monthno+1) %in%  ## next month is big drop off
              paste0(big_dropoff$state_abbrev, 
                     big_dropoff$year, 
                     big_dropoff$monthno))

library(tidylog)
snap_df2 <- snap_df %>% 
  mutate(flag_big_dropoff = if_else(paste0(state_abbrev, year, monthno) %in%
                            paste0(flag_big_dropoff$state_abbrev, 
                                   flag_big_dropoff$year, 
                                   flag_big_dropoff$monthno), 1, 0), 
         flag_big_increase = if_else(paste0(state_abbrev, year, monthno) %in%
                              paste0(flag_big_increase$state_abbrev, 
                                     flag_big_increase$year, 
                                     flag_big_increase$monthno), 1, 0
                                     )) %>% 
  mutate(snaphh2 = if_else((flag_big_dropoff == 1 |
                              flag_big_increase == 1), NA, snaphh), 
         snapp2 = if_else((flag_big_dropoff == 1 |
                             flag_big_increase == 1), NA, snapp))


## calculation of percentage of population recieving benefits from 2010 population data available in the dataset. 
snap_df2 <- snap_df2 %>% 
  mutate(ym = paste(year, monthno, sep = "-"), 
         ym = lubridate::ym(ym)) %>% 
  mutate(pct_snapp2 = snapp2/totpop_2010 * 100) ## percentage of pop getting SNAP benefits.
  

## Import population data from the USDA website. 
pop_data <- read_csv("data/pop data.csv", 
                     col_names = FALSE) %>% 
  mutate(X1 = if_else(X1 == "United States", "US", X1)) %>%  #rename to US to match SNAP data. 
  select(-X5) %>% 
  rename(State = 1, 
         Pop_1990	= 2, 
         Pop_2000 = 3, 
         Pop_2010	= 4, 
         Pop_2020	= 5, 
         Pop_2023	 = 6, 
         'Change_2020-23'	 = 7) %>% 
  janitor::clean_names() %>% 
  select(-c(pop_2023, 'change_2020_23'))

## only includes 50 states + DC and PR. 


## only Guam is not matched. 

snap_df3 <- snap_df2 %>%
  left_join(pop_data,
            join_by(state)) %>% 
  mutate(pct_snapp3 = case_when(  ## proportion of SNAP benefactors using the most recent census population data. 
    year < 2000 ~ snapp/pop_1990, 
    between(year, 2000, 2009) ~ snapp/pop_2000, 
    between(year, 2010, 2019) ~ snapp/pop_2010, 
    year >= 2020 ~ snapp/pop_2020, 
    TRUE ~ NA
  ), 
    pct_snapp3 = pct_snapp3 * 100) %>% 
  mutate(pct_snapp3 = if_else((flag_big_dropoff ==1 |
                                flag_big_increase == 1),## set to missing for values that have been flagged.
                              NA, pct_snapp3),
         benperhh = if_else((flag_big_dropoff ==1 |
                               flag_big_increase == 1), NA, benperhh ),
         benperp = if_else((flag_big_dropoff == 1|
                              flag_big_increase == 1), NA, benperp))  ## set benefit amounts to missing for rows with flags. ## prevents some implausible values.  

saveRDS(snap_df3, "data/snap_df3.rds")

```

## questions
1. number of persons/households with SNAP benefits over time
2. benefit amount over time 
3. state/regional level comparisons. 


```{r}
fig1 <- snap_df3 %>% 
  ggplot(aes(x = ym, y = pct_snapp3, group = state_abbrev, 
             col = state_abbrev))+
  geom_line() +
  custom_style3()


library(plotly)


ggplotly(fig1)


library(showtext)
font_add_google(name = "Montserrat", family = "Montserrat")

showtext_auto()

fig2 <- snap_df3 %>% 
  filter(!is.na(region_name)) %>% 
  ggplot(aes(x = ym, y = pct_snapp3))+
  geom_line(aes(group = state_abbrev),
            alpha = 0.3, 
             col = Maizgray) +
  geom_smooth(method = "loess", col = "darkblue")+
  facet_wrap(~region_name)+
  custom_style3()


ggplotly(fig2)



fig3 <- snap_df3 %>% 
  dplyr::mutate(g_col = if_else(state_abbrev== "US", "r",  'g')) %>% 
  ggplot(aes(x = ym, y = benperhh))+
  geom_line(aes(group = state_abbrev,  col = g_col),
            alpha = 0.3
             ) +
  scale_color_manual(values = c('r' = "red", 
                                'g' = Maizgray))+
  custom_style3()



ggplotly(fig3)







```

